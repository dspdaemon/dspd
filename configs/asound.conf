pcm.dspd {
#This is how to make it take arguments so apps can use
#something like "dspd:0,0" or dspd:0 or just dspd just
#like plughw.
 @args [ CARD SUBDEV ]
 @args.CARD {
   type integer	
#   default 0
 }
 @args.SUBDEV {
   type integer
#   default 0
 }   
 device $CARD
 subdevice $SUBDEV
#Set this if using pcm.hw instead of pcm.dspd.
# hookmode 1
 type dspd

}

pcm.dspdPhonon {
  type dspd
  hint {
        show on
        description "DSPD"
     }
}




pcm.!default {
   type dspd
}


#Real hardware interface for dspd.  This should be used if overriding
#the hw interface with dspd because dspd still needs real hardware access
#to be able to play and record sounds.
pcm.realhw {

 @args [ CARD SUBDEV ]
 @args.CARD {
   type integer	
#   default 0
 }
 @args.SUBDEV {
   type integer
#   default 0
 }   
 card $CARD

#Set this if using pcm.hw instead of pcm.dspd.
# hookmode 1
 type hw

}


#Config for new ALSA plugin (alsa/pcm_dspd_new.c)
pcm.dspd_new {
#This is how to make it take arguments so apps can use
#something like "dspd:0,0" or dspd:0 or just dspd just
#like plughw.
 @args [ CARD SUBDEV ]
 @args.CARD {
   type integer	
#   default 0
 }
 @args.SUBDEV {
   type integer
#   default 0
 }   
 device $CARD
 subdevice $SUBDEV
#Set this if using pcm.hw instead of pcm.dspd.
# hookmode 1
 type dspd

#Use raw hardware parameters with no conversions.  Good for running
#as a slave for ALSA plug, which is a good workaround for the missing
#timing constraints in the ALSA ioplug layer.
 raw 0

#Use various hardware parameters with no conversions (boolean)
raw_channels 0
raw_rate 0
#Use 32 bit formats.  The internal format is always 32 bit float.
#32 bit integers are the most appropriate linear format since many
#CPUs implement efficient float<>int conversions and the precision
#is greater than a 16 bit integer.
raw_formats 0

#Try to find a subdevice (usually not used)
#subdevice 0

#Override nonblocking state
nonblock 0

#ALSA format
#format "S32_LE"


#various options for device selection
#
#device index (slot number)
#index 255

#match device name (hw:0, etc)
#name "hw:0"

#match human readable description
#desc "Intel HDA"

#Maximum latency in microseconds.
#This can be used for apps that don't negotiate appropriate buffer sizes.
#This can be overridden by the environment variable SND_PCM_DSPD_MAX_LATENCY
#max_latency 1000000

#Fallback PCM if DSPD is not running
fallback "hw:0"

#Support broken apps that don't allow multiple pollfds.  This will increase
#CPU usage.
#single_fd 1



}
